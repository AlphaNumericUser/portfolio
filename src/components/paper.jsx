/* eslint-disable react/prop-types */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: AmirulIqwan (https://sketchfab.com/AmirulIqwan)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/paper-552363cef03348158d2213df37ad9efd
Title: Paper
*/

import { useGLTF, useTexture } from '@react-three/drei'
import * as THREE from 'three'
import { useRef } from 'react'

const Paper = (props) => {
    
  const { nodes, materials } = useGLTF('/models/paper.glb')
  const texture = useTexture(props.texture ? props.texture : '/textures/project/images/udemy-flutter-1.jpg');
  texture.flipY = false;

  // Referencia para la línea
  const lineRef = useRef()

  // Coordenadas de la línea (vertical, eje Y) - más larga
  const linePoints = [
    new THREE.Vector3(0, -0.3, 0), // Punto inferior más abajo
    new THREE.Vector3(0, 0.3, 0),  // Punto superior más arriba
  ]
  const lineGeometry = new THREE.BufferGeometry().setFromPoints(linePoints)

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_4.geometry}
        material={materials['Material.001']}
        position={[-0.173, -0.274, 0.172]}
        scale={[0.279, 1, 0.216]}
        rotation={[0, 0, props.rotationZ ?? 0]} // <-- Aplica la rotación sobre el eje Z
      >
        <meshBasicMaterial map={texture} toneMapped={false} side={THREE.DoubleSide} />
      </mesh>
      {/* Línea gruesa en medio del papel usando un cilindro en el eje Z */}
      <mesh
        position={[-0.173, -0.274, 0.172]}
        scale={[0.01, 0.5, 0.01]}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <cylinderGeometry args={[1, 1, 1, 16]} />
        <meshBasicMaterial color="black" />
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/paper.glb')

export default Paper;